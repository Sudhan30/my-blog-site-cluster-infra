name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME_BLOG: sudhan03/blog-site
  IMAGE_NAME_BACKEND: sudhan03/blog-site-backend
  IMAGE_NAME_INFRA: sudhan03/blog-site-infra

jobs:
  build-blog:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push blog image
      uses: docker/build-push-action@v5
      with:
        context: ./blog
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BLOG }}:main-${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BLOG }}:latest
        labels: |
          org.opencontainers.image.title=Blog Site
          org.opencontainers.image.description=Blog site container
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:main-${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:latest
        labels: |
          org.opencontainers.image.title=Blog Backend
          org.opencontainers.image.description=Blog backend API container
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-infra:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push infrastructure image
      uses: docker/build-push-action@v5
      with:
        context: ./infra
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_INFRA }}:main-${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_INFRA }}:latest
        labels: |
          org.opencontainers.image.title=Blog Infrastructure
          org.opencontainers.image.description=Blog infrastructure stack container
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify-flux:
    needs: [build-blog, build-backend, build-infra]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: read
    
    steps:
    - name: Notify Flux of new images
      run: |
        echo "New images built and pushed to Docker Hub:"
        echo "Blog: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BLOG }}:main-${{ github.sha }}"
        echo "Backend: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:main-${{ github.sha }}"
        echo "Infrastructure: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_INFRA }}:main-${{ github.sha }}"
        echo "Flux Image Automation will automatically update the manifests"

  verify-deployment:
    needs: [notify-flux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: read
    
    steps:
    - name: Deployment verification info
      run: |
        echo "‚úÖ Images built and pushed successfully to Docker Hub"
        echo "üì¶ Blog image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BLOG }}:main-${{ github.sha }}"
        echo "üì¶ Backend image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:main-${{ github.sha }}"
        echo "üì¶ Infrastructure image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_INFRA }}:main-${{ github.sha }}"
        echo ""
        echo "üîÑ Flux Image Automation will now:"
        echo "   1. Detect the new images in Docker Hub"
        echo "   2. Update the Kubernetes manifests automatically"
        echo "   3. Commit the changes back to the repository"
        echo "   4. Trigger Flux CD to deploy the updates"
        echo ""
        echo "‚è±Ô∏è  Expected timeline: 2-5 minutes for complete deployment"
        echo "üîç Check your cluster with: kubectl get pods -n web"
        echo "üåê Your blog will be available at: https://blog.sudharsana.dev"
        echo "üìä Grafana dashboard: https://grafana.sudharsana.dev"
        echo "üìà Prometheus metrics: https://prometheus.sudharsana.dev"
