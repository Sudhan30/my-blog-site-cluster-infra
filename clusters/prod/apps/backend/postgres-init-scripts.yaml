apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: web
data:
  01-init.sql: |
    -- Create tables for blog backend
    CREATE TABLE IF NOT EXISTS likes (
        id SERIAL PRIMARY KEY,
        post_id VARCHAR(255) NOT NULL,
        user_id VARCHAR(255),
        user_ip INET,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(post_id, user_id),
        UNIQUE(post_id, user_ip)
    );
    
    CREATE TABLE IF NOT EXISTS comments (
        id SERIAL PRIMARY KEY,
        post_id VARCHAR(255) NOT NULL,
        content TEXT NOT NULL,
        author_name VARCHAR(255) NOT NULL,
        author_email VARCHAR(255),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Create indexes for better performance
    CREATE INDEX IF NOT EXISTS idx_likes_post_id ON likes(post_id);
    CREATE INDEX IF NOT EXISTS idx_likes_created_at ON likes(created_at);
    CREATE INDEX IF NOT EXISTS idx_comments_post_id ON comments(post_id);
    CREATE INDEX IF NOT EXISTS idx_comments_created_at ON comments(created_at);
    
    -- Insert some sample data
    INSERT INTO likes (post_id, user_id, user_ip) VALUES 
    ('sample-post-1', 'user1', '192.168.1.1'),
    ('sample-post-1', 'user2', '192.168.1.2'),
    ('sample-post-2', 'user3', '192.168.1.3')
    ON CONFLICT DO NOTHING;
    
    INSERT INTO comments (post_id, content, author_name, author_email) VALUES 
    ('sample-post-1', 'Great article!', 'John Doe', 'john@example.com'),
    ('sample-post-1', 'Very informative', 'Jane Smith', 'jane@example.com'),
    ('sample-post-2', 'Thanks for sharing', 'Bob Johnson', 'bob@example.com')
    ON CONFLICT DO NOTHING;
