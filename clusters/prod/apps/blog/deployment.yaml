apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: web
spec:
  replicas: 2
  selector: { matchLabels: { app: blog } }
  template:
    metadata: { labels: { app: blog } }
    spec:
      imagePullSecrets:
        - name: dockerhub-creds
      containers:
        - name: blog
          image: docker.io/sudhan03/blog-site:latest
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 80 }]
          resources:
            requests: { cpu: 100m, memory: 128Mi }
            limits:   { cpu: 500m, memory: 512Mi }
          readinessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 10
            periodSeconds: 10
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: { app: blog }
  template:
    metadata:
      labels: { app: blog }
    spec:
      containers:
        - name: blog
          image: docker.io/sudhan03/blog-site:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: nginx-conf
          configMap:
            name: blog-nginx-conf
